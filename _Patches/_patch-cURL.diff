diff --git a/lib/Makefile.m32 b/lib/Makefile.m32
index fe8701bdb..566beb30e 100644
--- a/lib/Makefile.m32
+++ b/lib/Makefile.m32
@@ -337,6 +337,7 @@ ifndef USE_LDAP_OPENLDAP
 endif
 endif
 DLL_LIBS += -lws2_32
+DLL_LIBS += $(CURL_LDFLAG_EXTRAS2)
 
 # Makefile.inc provides the CSOURCES and HHEADERS defines
 include Makefile.inc
@@ -354,6 +355,11 @@ libcurl_a_DEPENDENCIES := $(strip $(CSOURCES) $(HHEADERS))
 
 RESOURCE = libcurl.res
 
+$(info [CFLAGS] $(CFLAGS))
+$(info [LDFLAGS] $(LDFLAGS))
+$(info [DLL_LIBS] $(DLL_LIBS))
+$(info [curl_LDADD] $(curl_LDADD))
+#$(error ***)
 
 all: $(libcurl_a_LIBRARY) $(libcurl_dll_LIBRARY)
 
diff --git a/src/Makefile.m32 b/src/Makefile.m32
index 802a1da0f..d25b6bf35 100644
--- a/src/Makefile.m32
+++ b/src/Makefile.m32
@@ -356,6 +356,7 @@ curl_LDADD += -lwldap32
 endif
 endif
 curl_LDADD += -lws2_32
+curl_LDADD += $(CURL_LDFLAG_EXTRAS2)
 
 # Makefile.inc provides the CSOURCES and HHEADERS defines
 include Makefile.inc
@@ -370,6 +371,11 @@ endif
 
 RESOURCE = curl.res
 
+$(info [CFLAGS] $(CFLAGS))
+$(info [LDFLAGS] $(LDFLAGS))
+$(info [DLL_LIBS] $(DLL_LIBS))
+$(info [curl_LDADD] $(curl_LDADD))
+#$(error ***)
 
 all: $(curl_PROGRAMS)
 
diff --git a/src/tool_doswin.c b/src/tool_doswin.c
index b7df3e615..69f51d046 100644
--- a/src/tool_doswin.c
+++ b/src/tool_doswin.c
@@ -655,6 +655,9 @@ struct curl_slist *GetLoadedModulePaths(void)
 
   mod.dwSize = sizeof(MODULEENTRY32);
 
+  /* [marius]: Toolhelp functions are available in W2K+ */
+#if _WIN32_WINNT >= _WIN32_WINNT_WIN2K
+
   do {
     hnd = CreateToolhelp32Snapshot(TH32CS_SNAPMODULE, 0);
   } while(hnd == INVALID_HANDLE_VALUE && GetLastError() == ERROR_BAD_LENGTH);
@@ -694,6 +697,8 @@ error:
 cleanup:
   if(hnd != INVALID_HANDLE_VALUE)
     CloseHandle(hnd);
+
+#endif
   return slist;
 }
 
@@ -702,6 +707,8 @@ bool tool_isVistaOrGreater;
 
 CURLcode win32_init(void)
 {
+  /* [marius]: VER_SET_CONDITION expands to kernel32!VerSetConditionMask which is available in W2K+ */
+#if _WIN32_WINNT >= _WIN32_WINNT_WIN2K
   OSVERSIONINFOEXA osvi;
   unsigned __int64 mask = 0;
   unsigned char op = VER_GREATER_EQUAL;
@@ -718,6 +725,9 @@ CURLcode win32_init(void)
     tool_isVistaOrGreater = false;
   else
     return CURLE_FAILED_INIT;
+#else
+  tool_isVistaOrGreater = (LOBYTE(LOWORD(GetVersion())) >= 6);
+#endif
 
   QueryPerformanceFrequency(&tool_freq);
   return CURLE_OK;
